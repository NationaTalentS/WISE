{"version":3,"sources":["notebookItemController.es6"],"names":["NotebookItemController","$injector","$rootScope","$scope","$filter","ConfigService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","$translate","mode","getMode","item","getNotebookItemById","itemId","workgroupId","id","type","notebookConfig","getNotebookConfig","label","itemTypes","$on","event","args","notebook","items","last","nodeId","getNodePositionAndTitleByNodeId","getNodePositionById","getThemePath","ev","onDelete","stopPropagation","$ev","$itemId","localNotebookItemId","onRevive","onSelect","note","$inject"],"mappings":"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","file":"notebookItemController.js","sourcesContent":["'use strict';\n\nclass NotebookItemController {\n  constructor($injector,\n              $rootScope,\n              $scope,\n              $filter,\n              ConfigService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    this.$injector = $injector;\n    this.$rootScope = $rootScope;\n    this.$scope = $scope;\n    this.$filter = $filter;\n    this.ConfigService = ConfigService;\n    this.NotebookService = NotebookService;\n    this.ProjectService = ProjectService;\n    this.StudentAssetService = StudentAssetService;\n    this.StudentDataService = StudentDataService;\n    this.UtilService = UtilService;\n    this.$translate = this.$filter('translate');\n    this.mode = this.ConfigService.getMode();\n    this.item = this.NotebookService.getNotebookItemById(this.itemId, this.workgroupId);\n    this.item.id = null; // set to null so we're creating a new notebook item. An edit to a notebook item results in a new entry in the db.\n\n    this.type = this.item ? this.item.type : null;\n    this.notebookConfig = this.NotebookService.getNotebookConfig();\n    this.label = this.notebookConfig.itemTypes[this.type].label;\n    this.$rootScope.$on('notebookUpdated', (event, args) => {\n      let notebook = args.notebook;\n      if (notebook.items[this.itemId]) {\n        this.item = notebook.items[this.itemId].last();\n      }\n    });\n  }\n\n  getItemNodeId() {\n    if (this.item == null) {\n      return null;\n    } else {\n      return this.item.nodeId;\n    }\n  }\n\n  getItemNodeLink() {\n    if (this.item == null) {\n      return \"\";\n    } else {\n      return this.ProjectService.getNodePositionAndTitleByNodeId(this.item.nodeId);\n    }\n  }\n\n  getItemNodePosition() {\n    if (this.item == null) {\n      return \"\";\n    } else {\n      return this.ProjectService.getNodePositionById(this.item.nodeId);\n    }\n  }\n\n  getTemplateUrl() {\n    return this.ProjectService.getThemePath() + '/notebook/notebookItem.html';\n  }\n\n  doDelete(ev) {\n    if (this.onDelete) {\n      ev.stopPropagation();\n      this.onDelete({$ev: ev, $itemId: this.item.localNotebookItemId});\n    }\n  }\n\n  doRevive(ev) {\n    if (this.onRevive) {\n      ev.stopPropagation();\n      this.onRevive({$ev: ev, $itemId: this.item.localNotebookItemId});\n    }\n  }\n\n  doSelect(ev) {\n    if (this.onSelect) {\n      this.onSelect({$ev: ev, note: this.item});\n    }\n  }\n}\n\nNotebookItemController.$inject = [\n  \"$injector\",\n  \"$rootScope\",\n  \"$scope\",\n  \"$filter\",\n  \"ConfigService\",\n  \"NotebookService\",\n  \"ProjectService\",\n  \"StudentAssetService\",\n  \"StudentDataService\",\n  \"UtilService\"\n];\n\nexport default NotebookItemController;\n"]}